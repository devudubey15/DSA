Maximum Product of Two Elements in an Array
Solved
Easy

Hint
Given the array of integers nums, you will choose two different indices i and j of that array. Return the maximum value of (nums[i]-1)*(nums[j]-1).
 

Example 1:

Input: nums = [3,4,5,2]
Output: 12 
Explanation: If you choose the indices i=1 and j=2 (indexed from 0), you will get the maximum value, that is, (nums[1]-1)*(nums[2]-1) = (4-1)*(5-1) = 3*4 = 12. 
Example 2:

Input: nums = [1,5,4,5]
Output: 16
Explanation: Choosing the indices i=1 and j=3 (indexed from 0), you will get the maximum value of (5-1)*(5-1) = 16.
Example 3:

Input: nums = [3,7]
Output: 12

------------------------------------------------------------------

solution: -class Solution {
    public int maxProduct(int[] nums) {
        List<Integer> myArrayList2 = new ArrayList<>();
	 for (int num : nums) {
            myArrayList2.add(num);
        }
	 int max1 = Collections.max(myArrayList2);
	myArrayList2.remove(Integer.valueOf(max1));

	int max2 = Collections.max(myArrayList2);

	return (max1 - 1) * (max2 -1);
    }
}
--------------------------------------------------------------
// Find the maximum value in the ArrayList
        int max = Collections.max(list);

----------------------------------------------

// Using the Arrays.asList() method
int[] myArray = {1, 2, 3, 4, 5};
List<Integer> myArrayList = Arrays.asList(myArray);

// Using the Collections.addAll() method
List<Integer> myArrayList2 = new ArrayList<>();
Collections.addAll(myArrayList2, myArray);

// Using a for loop
List<Integer> myArrayList3 = new ArrayList<>();
for (int i = 0; i < myArray.length; i++) {
  myArrayList3.add(myArray[i]);
}
----------------------------------------------